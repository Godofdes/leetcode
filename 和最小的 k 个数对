class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        
        PriorityQueue<int[]> pqueue = new PriorityQueue<>(new Comparator<int[]>() {
            @Override
            public int compare(int[] arr1, int[] arr2){
                return arr2[2] - arr1[2];
            }
        });
        for(int i = 0; i<nums1.length;i++){
            for(int j = 0; j<nums2.length;j++){
                pqueue.add(new int[]{nums1[i], nums2[j], nums1[i]+nums2[j]});
                if(pqueue.size()>k){
                    pqueue.poll();
                }
            }
        }
        List<List<Integer>> lls = new ArrayList<>();
        int i = 0;
        while(i<k&&!pqueue.isEmpty()){
            int[] peek = pqueue.poll();
            List<Integer> ls = new ArrayList<>();
            ls.add(peek[0]);
            ls.add(peek[1]);
            lls.add(ls);
           i++;
        }
        return lls;
    }
}
