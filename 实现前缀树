class Trie {

    TreeNode root;
    class TreeNode{
        boolean isEnd;
        TreeNode[] next;
        public TreeNode(){
            next = new TreeNode[26];
        }
    }
    public Trie() {
        root = new TreeNode();
    }
    
    public void insert(String word) {
        TreeNode cur = root;
        for(char ch : word.toCharArray()){
            if(cur.next[ch-'a']==null){
                cur.next[ch-'a'] = new TreeNode();
            }
            cur = cur.next[ch-'a'];
        }
        cur.isEnd = true;
    }
    
    public boolean search(String word) {
        TreeNode cur = root;
        for(char ch : word.toCharArray()){
            if(cur.next[ch-'a']==null){
                return false;
            }
            cur = cur.next[ch-'a'];
        }
        return cur.isEnd;
    }
    
    public boolean startsWith(String prefix) {
        TreeNode cur  = root;
        for(char ch : prefix.toCharArray()){
            if(cur.next[ch-'a']==null){
                return false;
            }
            cur = cur.next[ch-'a'];
        }
        return true;
    }
}
/**
 * Your Trie object will be instantiated and called as such:
 * Trie obj = new Trie();
 * obj.insert(word);
 * boolean param_2 = obj.search(word);
 * boolean param_3 = obj.startsWith(prefix);
 */
