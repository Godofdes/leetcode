//给定一个含有 n 个正整数的数组和一个正整数 target 。
//找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 [numsl, numsl+1, ..., numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0 。
//滑动窗口方法
class Solution {
    public int minSubArrayLen(int target, int[] nums) {
        int len = nums.length;
        int left = 0, right = 0;
        int sum = 0, min = len +1;

        while(right<len){
            sum+=nums[right++];
            while(left<right&&sum>=target){
                min = Math.min(min,right-left);
                sum-=nums[left++];
            }
        }
        return min == len + 1 ? 0 : min;
    }
}
