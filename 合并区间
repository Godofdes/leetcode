class Solution {
    public int[][] merge(int[][] intervals) {
        if(intervals.length == 0){
            return new int[0][2];
        }
        Arrays.sort(intervals, new Comparator<int[]>() {
            @Override
            public int compare(int[] intervals1, int[] intervals2){
                return intervals1[0] - intervals2[0];
            }
        });
        List<int[]> ls = new ArrayList<int[]>();
        for(int i = 0; i < intervals.length; i++){
            int left = intervals[i][0], right = intervals[i][1];
            if(ls.size()==0||ls.get(ls.size()-1)[1]<left){
                ls.add(new int[]{left, right});
            }
            else{
                ls.get(ls.size() - 1)[1] = Math.max(ls.get(ls.size() - 1)[1], right);
            }
        }
        return ls.toArray(new int[ls.size()][]);
    }
}
